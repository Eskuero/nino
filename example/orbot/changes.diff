diff --git a/app/build.gradle b/app/build.gradle
index 573b1918..f5c72685 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -1,24 +1,6 @@
 apply plugin: 'com.android.application'
 
-// Create a variable called keystorePropertiesFile, and initialize it to your
-// keystore.properties file, in the rootProject folder.
-def keystorePropertiesFile = rootProject.file("keystore.properties")
-
-// Initialize a new Properties() object called keystoreProperties.
-def keystoreProperties = new Properties()
-
-// Load your keystore.properties file into the keystoreProperties object.
-keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
-
 android {
-   signingConfigs {
-        release {
-            keyAlias keystoreProperties['keyAlias']
-            keyPassword keystoreProperties['keyPassword']
-            storeFile file(keystoreProperties['storeFile'])
-            storePassword keystoreProperties['storePassword']
-        }
-    }
 
     compileSdkVersion 28
     buildToolsVersion '28.0.3'
@@ -38,7 +20,6 @@ android {
             minifyEnabled false
             shrinkResources false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
-            signingConfig signingConfigs.release
         }
     }
 
@@ -54,7 +35,7 @@ android {
             minSdkVersion 16
             applicationId 'org.torproject.android'
             targetSdkVersion 28
-            versionCode 16111000
+            versionCode Integer.parseInt(new Date().format("yyMMddHHmm"))
             versionName '16.1.1-BETA-2-tor-0.4.0.4-rc'
             archivesBaseName = "Orbot-$versionName"
         }
@@ -83,6 +64,15 @@ android {
 
 
     }
+    // Increment version code for each ABI variant
+    def abiOffsets = [ 'armeabi': 1, 'armeabi-v7a':2, 'arm64-v8a':3, 'x86':4, 'x86_64':5, ]
+    applicationVariants.all { variant ->
+        variant.outputs.each { output ->
+            def offset = abiOffsets.get(output.getFilter(com.android.build.OutputFile.ABI))
+            if (offset != null)
+                output.versionCodeOverride = variant.versionCode + offset
+        }
+    }
 
 }
 
@@ -96,20 +86,3 @@ dependencies {
     androidTestImplementation "tools.fastlane:screengrab:1.2.0"
 }
 
-// Map for the version code that gives each ABI a value.
-ext.abiCodes = ['armeabi-v7a':'1', 'arm64-v8a':'2', 'mips':'3', 'x86':'4', 'x86_64':'5']
-
-import com.android.build.OutputFile
-
-// For each APK output variant, override version code of outputs based on ABI codes
-// ex) 'mips' -> 3xxx
-// ex) 'x86' -> 4xxx
-android.applicationVariants.all { variant ->
-    variant.outputs.each { output ->
-        def baseVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
-        if (baseVersionCode != null) {
-            output.versionCodeOverride = Integer.valueOf(baseVersionCode + variant.versionCode)
-        }
-    }
-}
-
